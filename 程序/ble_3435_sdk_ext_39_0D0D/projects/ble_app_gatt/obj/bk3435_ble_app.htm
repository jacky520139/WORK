<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3435_ble_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3435_ble_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Nov 30 18:05:13 2019
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b5]">rw_pn9_enter</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b5]">rw_pn9_enter</a><BR>
 <LI><a href="#[159]">usmart_strcmp</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[159]">usmart_strcmp</a><BR>
 <LI><a href="#[161]">usmart_search_nextc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[161]">usmart_search_nextc</a><BR>
 <LI><a href="#[15f]">usmart_strcopy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f]">usmart_strcopy</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2a]">Alarm_cb</a> from app_rtc.o(.text) referenced from app_rtc.o(.text)
 <LI><a href="#[76]">BlueLed</a> from led.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[75]">Init_LED</a> from led.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[18]">Read_Uart_Buf</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from usart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[2b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[51]">app_batt_add_bas</a> from app_batt.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[53]">app_batt_msg_dflt_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[7e]">app_batt_send_lvl</a> from app_batt.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[60]">app_ffc1_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[62]">app_ffc2_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[50]">app_fff0_add_fff0s</a> from app_fff0.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[59]">app_fff0_msg_dflt_handler</a> from app_fff0.o(.text) referenced from app_fff0.o(.constdata)
 <LI><a href="#[73]">app_led_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[52]">app_oad_add_oads</a> from app_oads.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[5e]">app_oads_msg_dflt_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[72]">app_period_timer_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[79]">appm_disconnect</a> from app.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[7a]">appm_get_dev_name</a> from app.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[64]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[77]">appm_start_advertising</a> from app.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[78]">appm_stop_advertising</a> from app.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[16]">assert_err</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[17]">assert_param</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[54]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[57]">bass_batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[31]">bass_batt_level_upd_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[2f]">bass_cleanup</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[2e]">bass_create</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[2d]">bass_destroy</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[30]">bass_enable_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[56]">bass_enable_rsp_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[2c]">bass_init</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[55]">batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[39]">diss_cleanup</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[38]">diss_create</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[37]">diss_destroy</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[36]">diss_init</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[3a]">diss_set_value_req_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[3c]">diss_value_cfm_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[58]">diss_value_req_ind_handler</a> from app_dis.o(.text) referenced from app_dis.o(.constdata)
 <LI><a href="#[40]">fff0s_cleanup</a> from fff0s.o(.text) referenced from fff0s.o(.constdata)
 <LI><a href="#[3f]">fff0s_create</a> from fff0s.o(.text) referenced from fff0s.o(.constdata)
 <LI><a href="#[3e]">fff0s_destroy</a> from fff0s.o(.text) referenced from fff0s.o(.constdata)
 <LI><a href="#[5a]">fff0s_fff1_level_ntf_cfg_ind_handler</a> from app_fff0.o(.text) referenced from app_fff0.o(.constdata)
 <LI><a href="#[41]">fff0s_fff1_level_upd_req_handler</a> from fff0s_task.o(.text) referenced from fff0s_task.o(.constdata)
 <LI><a href="#[3d]">fff0s_init</a> from fff0s.o(.text) referenced from fff0s.o(.constdata)
 <LI><a href="#[5b]">fff1_level_upd_handler</a> from app_fff0.o(.text) referenced from app_fff0.o(.constdata)
 <LI><a href="#[5d]">fff1_period_ntf_handler</a> from app_fff0.o(.text) referenced from app_fff0.o(.constdata)
 <LI><a href="#[5c]">fff2_writer_req_handler</a> from app_fff0.o(.text) referenced from app_fff0.o(.constdata)
 <LI><a href="#[22]">flash_erase</a> from flash.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[20]">flash_read</a> from flash.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[21]">flash_write</a> from flash.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[6a]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[69]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[6b]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[67]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[6d]">gapc_le_pkt_size_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[70]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[6e]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[68]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[71]">gapc_update_conn_param_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[66]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[65]">gapm_device_ready_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[6c]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[32]">gattc_att_info_req_ind_handler</a> from bass_task.o(.text) referenced 2 times from bass_task.o(.constdata)
 <LI><a href="#[35]">gattc_cmp_evt_handler</a> from bass_task.o(.text) referenced 3 times from bass_task.o(.constdata)
 <LI><a href="#[6f]">gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[34]">gattc_read_req_ind_handler</a> from bass_task.o(.text) referenced 4 times from bass_task.o(.constdata)
 <LI><a href="#[33]">gattc_write_req_ind_handler</a> from bass_task.o(.text) referenced 3 times from bass_task.o(.constdata)
 <LI><a href="#[49]">oads_cleanup</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[48]">oads_create</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[47]">oads_destroy</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[4a]">oads_enable_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[5f]">oads_enable_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[4b]">oads_ffc1_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[61]">oads_ffc1_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[4c]">oads_ffc2_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[63]">oads_ffc2_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[46]">oads_init</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[15]">platform_reset</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[d]">prf_add_profile</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[c]">prf_cleanup</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[b]">prf_create</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[8]">prf_get_id_from_task</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[9]">prf_get_task_from_id</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[a]">prf_init</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[28]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[27]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[23]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[24]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[29]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[26]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[25]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[e]">rwble_hl_reset</a> from rwble_hl.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[11]">rwip_prevent_sleep_clear</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[10]">rwip_prevent_sleep_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[f]">rwip_reset</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[12]">rwip_sleep_lpcycles_2_us</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[13]">rwip_us_2_lpcycles</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[14]">rwip_wakeup_delay_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[83]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7c]">timer_enable</a> from timer.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[7d]">timer_get_time</a> from timer.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[7b]">timer_set_timeout</a> from timer.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[19]">uart_clear_rxfifo</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1d]">uart_flow_off</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1c]">uart_flow_on</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1f]">uart_printf</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1a]">uart_read</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[74]">uart_send</a> from uart.o(.text) referenced from ano_uart.o(.data)
 <LI><a href="#[1b]">uart_write</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[80]">usmart_cmd_rec</a> from usmart.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[81]">usmart_exe</a> from usmart.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[7f]">usmart_init</a> from usmart.o(.text) referenced from usmart_config.o(.data)
 <LI><a href="#[82]">usmart_scan</a> from usmart.o(.text) referenced from usmart_config.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ad]"></a>uart_stack_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[180]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[182]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[183]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[184]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[b0]"></a>nvds_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[d7]"></a>nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>

<P><STRONG><a name="[139]"></a>nvds_put</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[cf]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[d9]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[de]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[e9]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[dd]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[d0]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[112]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[115]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_destroy
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
</UL>

<P><STRONG><a name="[11b]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff0_add_fff0s
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[11c]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff0_add_fff0s
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[111]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[116]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_upd_req_handler
</UL>

<P><STRONG><a name="[11f]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_upd_req_handler
</UL>

<P><STRONG><a name="[110]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[13d]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_ntf_cfg_ind_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>

<P><STRONG><a name="[143]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_ntf_cfg_ind_handler
</UL>

<P><STRONG><a name="[e0]"></a>ke_timer_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[124]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[129]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[125]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[128]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[bd]"></a>em_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[bf]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[c4]"></a>llc_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[be]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[c3]"></a>lld_core_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[ce]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[cd]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[c9]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[cb]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[e5]"></a>lld_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[e6]"></a>lld_sleep_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[e8]"></a>lld_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[c0]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[c1]"></a>llm_ble_ready</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[d6]"></a>ea_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[c8]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[cc]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[e2]"></a>ea_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[120]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
</UL>

<P><STRONG><a name="[b9]"></a>gapm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[113]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[12e]"></a>attm_svc_create_db128</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[114]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[b8]"></a>attm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[ba]"></a>gattm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[bb]"></a>l2cm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[d4]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[da]"></a>hci_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[d3]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e7]"></a>h4tl_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[e3]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[d5]"></a>ahi_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[ea]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
</UL>

<P><STRONG><a name="[138]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[a0]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff1_period_ntf_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff1_level_upd_handler
</UL>

<P><STRONG><a name="[137]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_clear_rxfifo
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[177]"></a>__ARM_clz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
</UL>

<P><STRONG><a name="[8a]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter (via BLX)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[8b]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter (via BLX)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[9b]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED (via BLX)
</UL>

<P><STRONG><a name="[9c]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED (via BLX)
</UL>

<P><STRONG><a name="[140]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe (via BLX)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe (via BLX)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[83]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via Veneer)
</UL>

<P><STRONG><a name="[84]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[86]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[16]"></a>assert_err</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>assert_param</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>assert_warn</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[89]"></a>dump_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[15]"></a>platform_reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[8e]"></a>bdaddr_env_init</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[91]"></a>rw_dut_enter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_dut_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_dut_enter
</UL>

<P><STRONG><a name="[93]"></a>rw_app_enter</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_get_sleep_mode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[a1]"></a>sys_mode_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[9d]"></a>rom_env_init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[a5]"></a>rwip_eif_api_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[9f]"></a>rw_main</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stack_register
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cb_register
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_pn9_enter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emi_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RTC
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_api_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mode_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>

<P><STRONG><a name="[d2]"></a>rwip_eif_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[b7]"></a>rwble_hl_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e]"></a>rwble_hl_reset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>rwble_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ble_ready
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[c2]"></a>rwble_reset</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_core_reset
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_reset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[e1]"></a>rwble_sleep_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[dc]"></a>rwble_version</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwble.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_version
</UL>

<P><STRONG><a name="[c5]"></a>rwble_isr</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[df]"></a>rwip_check_wakeup_boundary</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[b1]"></a>rwip_init</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ahi_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[f]"></a>rwip_reset</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>rwip_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_version
</UL>

<P><STRONG><a name="[92]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_dut_enter
</UL>

<P><STRONG><a name="[10]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>rwip_sleep</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_uart_stop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_check_wakeup_boundary
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_check
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_enter
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_sleep_check
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[c6]"></a>rwip_wakeup</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_start
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[11]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>rwip_wakeup_end</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup_end
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[13]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_delay_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>rwip_wakeup_delay_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>rwip_sleep_lpcycles_2_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rwip.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>system_sleep_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[b2]"></a>icu_init</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[97]"></a>icu_get_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[98]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[fd]"></a>cpu_wakeup</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[99]"></a>cpu_idle_sleep</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[eb]"></a>switch_clk</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
</UL>

<P><STRONG><a name="[ab]"></a>gpio_config</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_test_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[14f]"></a>gpio_get_input</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[ac]"></a>gpio_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[ed]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[ff]"></a>gpio_isr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[ee]"></a>gpio_test_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[f6]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[f0]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[f3]"></a>flash_read_sr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[ef]"></a>flash_write_sr</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[f1]"></a>flash_wp_256k</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[f2]"></a>flash_wp_ALL</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[ae]"></a>flash_advance_init</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[f5]"></a>clr_flash_qwfr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[f4]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[b3]"></a>flash_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[f7]"></a>flash_erase_sector</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[8f]"></a>flash_read_data</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[f8]"></a>flash_write_data</STRONG> (Thumb, 300 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[20]"></a>flash_read</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>flash_write</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>udi_exchange_fdata_to_adjoining_next_sector</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[fa]"></a>udi_exchange_fdata_to_adjoining_previous_sector</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[22]"></a>flash_erase</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>emi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, emi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[a8]"></a>adc_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[101]"></a>adc_isr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[fb]"></a>adc_get_value</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[a6]"></a>intc_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[87]"></a>IRQ_Exception</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_isr
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[85]"></a>FIQ_Exception</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[14b]"></a>pwm_init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[14c]"></a>pwm_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[100]"></a>pwm_isr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[a4]"></a>timer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[7b]"></a>timer_set_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>timer_get_time</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[7c]"></a>timer_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[102]"></a>timer_isr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>

<P><STRONG><a name="[18]"></a>Read_Uart_Buf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>uart_putchar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
</UL>

<P><STRONG><a name="[1f]"></a>uart_printf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_data
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_period_timer_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_rsp_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_rsp_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_writer_req_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_msg_dflt_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff0_msg_dflt_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_ntf_cfg_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_msg_dflt_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_rsp_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_level_upd_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_ntf_cfg_ind_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>hex2Str</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
</UL>

<P><STRONG><a name="[105]"></a>uart_print_int</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>

<P><STRONG><a name="[a9]"></a>uart_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1c]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>uart_clear_rxfifo</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>uart_finish_transfers</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[1a]"></a>uart_read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>uart_write</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff2_writer_req_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>uart_send</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ano_uart.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>uart_cb_register</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[fe]"></a>uart_isr</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[e4]"></a>check_uart_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[95]"></a>wdt_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[8d]"></a>wdt_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>

<P><STRONG><a name="[ca]"></a>wdt_feed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[108]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3435V2_openLoop
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_analog_xvr_reg
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
</UL>

<P><STRONG><a name="[ec]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3435V2_openLoop
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_clk
</UL>

<P><STRONG><a name="[107]"></a>kmod_calibration</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3435V2_openLoop
</UL>

<P><STRONG><a name="[109]"></a>init_analog_xvr_reg</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3435V2_openLoop
</UL>

<P><STRONG><a name="[10a]"></a>initial_xver_BK3435V2_openLoop</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_analog_xvr_reg
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[d1]"></a>rf_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3435V2_openLoop
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[fc]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
</UL>

<P><STRONG><a name="[a]"></a>prf_init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[118]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_idx
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_handle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_upd_req_handler
</UL>

<P><STRONG><a name="[11a]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
</UL>

<P><STRONG><a name="[121]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[8]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[14d]"></a>rtc_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RTC
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[14e]"></a>rtc_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RTC
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[156]"></a>rtc_alarm_init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Alarm
</UL>

<P><STRONG><a name="[145]"></a>rtc_get_time</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff1_period_ntf_handler
</UL>

<P><STRONG><a name="[117]"></a>bass_get_att_handle</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[10f]"></a>bass_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[11d]"></a>bass_get_att_idx</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[11e]"></a>bass_exe_operation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[123]"></a>diss_compute_cfg_flag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[10e]"></a>diss_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[12a]"></a>diss_handle_to_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[126]"></a>diss_value_to_handle</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[127]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[12b]"></a>fff0s_get_att_handle</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
</UL>

<P><STRONG><a name="[12c]"></a>fff0s_notify_fff1_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_handle
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_fff1_level_upd_req_handler
</UL>

<P><STRONG><a name="[10d]"></a>fff0s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[12d]"></a>fff0s_get_att_idx</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[12f]"></a>oad_save_reciveData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[130]"></a>oad_updating_user_section_begin</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[94]"></a>oad_updating_user_section_pro</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[136]"></a>oad_updating_user_section_end</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[133]"></a>oadImgIdentifyWrite</STRONG> (Thumb, 778 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[135]"></a>oadImgBlockWrite</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_end
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[10c]"></a>oads_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[122]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[d8]"></a>appm_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[149]"></a>appm_add_svc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[79]"></a>appm_disconnect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>appm_start_advertising</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>appm_stop_advertising</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[13e]"></a>appm_update_adv_data</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[134]"></a>appm_update_param</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[7a]"></a>appm_get_dev_name</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[13b]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[51]"></a>app_batt_add_bas</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>app_batt_enable_prf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[7e]"></a>app_batt_send_lvl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[13a]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[141]"></a>app_dis_add_dis</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_dis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[50]"></a>app_fff0_add_fff0s</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>app_fff1_send_lvl</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff1_level_upd_handler
</UL>

<P><STRONG><a name="[13c]"></a>app_oads_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[52]"></a>app_oad_add_oads</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>app_oads_enable_prf</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>

<P><STRONG><a name="[147]"></a>app_ffc1_ntf_req</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>

<P><STRONG><a name="[148]"></a>app_ffc2_ntf_req</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>

<P><STRONG><a name="[150]"></a>ANO_DT_Send_Version</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, ano_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
</UL>

<P><STRONG><a name="[75]"></a>Init_LED</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_enable
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Version
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>BlueLed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, led.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[a7]"></a>Init_RTC</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_rtc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[151]"></a>Is_Leap_Year</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
</UL>

<P><STRONG><a name="[152]"></a>RTC_Get_Week</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
</UL>

<P><STRONG><a name="[153]"></a>RTC_Set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
</UL>

<P><STRONG><a name="[154]"></a>RTC_Get</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, app_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
</UL>

<P><STRONG><a name="[2a]"></a>Alarm_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_rtc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_rtc.o(.text)
</UL>
<P><STRONG><a name="[155]"></a>Load_Alarm</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, app_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_init
</UL>

<P><STRONG><a name="[157]"></a>usmart_sys_cmd_exe</STRONG> (Thumb, 1446 bytes, Stack size 0 bytes, usmart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_cmdname
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
</UL>

<P><STRONG><a name="[7f]"></a>usmart_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usmart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>usmart_cmd_rec</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, usmart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[81]"></a>usmart_exe</STRONG> (Thumb, 462 bytes, Stack size 0 bytes, usmart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>usmart_scan</STRONG> (Thumb, 422 bytes, Stack size 0 bytes, usmart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[159]"></a>usmart_strcmp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[15f]"></a>usmart_strcopy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[162]"></a>usmart_strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[160]"></a>usmart_pow</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
</UL>

<P><STRONG><a name="[15c]"></a>usmart_str2num</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[158]"></a>usmart_get_cmdname</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[161]"></a>usmart_search_nextc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>

<P><STRONG><a name="[15a]"></a>usmart_get_fname</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[15b]"></a>usmart_get_aparm</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[15e]"></a>usmart_get_parmpos</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[15d]"></a>usmart_get_fparam</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, usmart_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strlen
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[166]"></a>BT_delayUs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_singleWaveCfg
</UL>

<P><STRONG><a name="[164]"></a>char_to_num</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rf_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fCheckValue
</UL>

<P><STRONG><a name="[163]"></a>fCheckValue</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, rf_test.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_num
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
</UL>

<P><STRONG><a name="[165]"></a>BT_singleWaveCfg</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rf_test.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_delayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
</UL>

<P><STRONG><a name="[b4]"></a>rw_fcc_enter</STRONG> (Thumb, 736 bytes, Stack size 0 bytes, rf_test.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_singleWaveCfg
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fCheckValue
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_delayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[168]"></a>XVR_Initial</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>

<P><STRONG><a name="[169]"></a>Test_XVR_PN9_Rx_Ena</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>

<P><STRONG><a name="[16a]"></a>Test_XVR_Single_Carrier_Tx_Ena1</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>

<P><STRONG><a name="[16b]"></a>LockPn9Test</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>

<P><STRONG><a name="[16c]"></a>GetBER</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pn9_test_process
</UL>

<P><STRONG><a name="[b5]"></a>rw_pn9_enter</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_pn9_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_pn9_enter
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[106]"></a>pn9_test_process</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, rf_pn9_test.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBER
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockPn9Test
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_XVR_Single_Carrier_Tx_Ena1
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_XVR_PN9_Rx_Ena
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XVR_Initial
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[167]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, strncmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_fcc_enter
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[173]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[175]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[171]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[170]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[17a]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[103]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9a]"></a>Stack_Integrity_Check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_app_enter
</UL>

<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[27]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>rf_force_agc_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[10b]"></a>prf_itf_get</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_prf_itf_get
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_prf_itf_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_prf_itf_get
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[2c]"></a>bass_init</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>bass_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>bass_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>bass_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>

<P><STRONG><a name="[30]"></a>bass_enable_req_handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>diss_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_compute_cfg_flag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>diss_destroy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>diss_set_value_req_handler</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>fff0s_init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>fff0s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>fff0s_create</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> fff0s.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>fff0s_cleanup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fff0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> fff0s.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>fff0s_fff1_level_upd_req_handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fff0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_notify_fff1_lvl
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, fff0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_idx
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, fff0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_idx
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, fff0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fff0s_get_att_idx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fff0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fff0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>oads_init</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db128
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>oads_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>oads_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>oads_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>oadImgIdentifyReq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[132]"></a>oadImgBlockReq</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[4a]"></a>oads_enable_req_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>oads_ffc1_upd_req_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>oads_ffc2_upd_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>batt_level_upd_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>bass_batt_level_upd_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>fff0s_fff1_level_ntf_cfg_ind_handler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fff0.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>fff1_level_upd_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fff1_send_lvl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fff0.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>app_fff0_msg_dflt_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fff0.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>fff2_writer_req_handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fff0.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>fff1_period_ntf_handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_fff0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fff0.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>oads_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>app_oads_msg_dflt_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>app_ffc1_writer_req_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>app_ffc2_writer_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>oads_ffc1_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>oads_ffc2_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>appm_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[65]"></a>gapm_device_ready_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>app_period_timer_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>appm_msg_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>gapc_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>app_led_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[17b]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[17f]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[17e]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
